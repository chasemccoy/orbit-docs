---
const { path, randid  } = Astro.props

const xurl = Astro.url.protocol + '//' + Astro.url.host + path

const result = await fetch(xurl)
const text = await result.text()

var config =  { files: { 'index.html' : {content: text}}}

---

  <head>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/playground-elements@0.18.1/themes/material-palenight.css"
      type="text/css"
    />
  </head>
  <style is:global>
    .example {
      box-sizing: border-box;
      width: 100%;
      border: 1px solid #ccc;
      overflow: hidden;
      border-radius: 10px;
    }
    .example > playground-preview * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    .example.code {
      background-color: rgb(41, 45, 62);
    }
    .example.code > playground-file-editor {
      margin: 8px;
      height: fit-content;
    }
    .example > ::part(preview-toolbar) {
      display: none;
    }
  </style>
 
  <script type="module">
    import playgroundElements from 'https://cdn.jsdelivr.net/npm/playground-elements@0.18.1/+esm'
  </script>
  <playground-project is:raw id={randid} >
    <script type="sample/html" filename="index.html">
    </script>
  </playground-project>
  <div class="example">
    <playground-preview  is:raw project={randid}>
    </playground-preview>
  </div>
  <br />
  <div class="example code">
    <playground-file-editor
    id="mycode"
      project={randid}
      class="playground-theme-material-palenight"></playground-file-editor>
  </div>
  <script define:vars={{config, randid}}>
    var ff = document.querySelector('#'+randid)
    ff['config'] = config
  </script>
 
