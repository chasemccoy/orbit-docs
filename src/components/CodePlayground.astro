---
/**
 * ðŸš€ CodePlayground Astro Component
 * Inspired by Google Playground Elements
 * Enjoy a stellar web experience with interactivity.
 * Author: ZumerLab - Juan Martin Muda
 * License: MIT
 * 
 * This code uses on Google-Playground-Elements by Google. (BSD 3-Clause License)
 * Original source: https://github.com/google/playground-elements
 * For Icons this code is based on Astro Starlight by Astro. (MIT License)
 * Original source: https://github.com/withastro/starlight
 */
 interface Props {
	name?: string;
	path?: string;
  hideCode?: boolean;
  hidePreview?: boolean;
}
const { path, name, hideCode=false, hidePreview=false } = Astro.props

// Depending on environment Dev or Prod url will take different values
const isDev = import.meta.env.DEV;
const xurl = isDev ? 
Astro.url.protocol + '//' + Astro.url.host + path : 
import.meta.env.SITE + path

---
<head>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/playground-elements@0.18.1/themes/material-palenight.css"
    type="text/css"
  />
</head>
<style is:global>
  .example {
    box-sizing: border-box;
    width: 100%;
    border: 1px solid #ccc;
    overflow: hidden;
    border-radius: 8px;
  }
  playground-preview {
    flex-direction: column-reverse !important;
  }
  playground-preview * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  .code {
    background-color: rgb(41, 45, 62);
    margin-top: -30px !important; 
   
  }
  .code > playground-file-editor {
    padding: 8px;
   
    height: fit-content;
  }
  .hide {
    display: none;
  }
  .example > ::part(preview-reload-button) {
    display: none;
  }
  .example > ::part(preview-toolbar) {
    border-top: var(--playground-border, solid 1px #ddd);
    background-color: rgba(41, 45, 62, 0.196);
  }
  .options{
    font-size: 15px;
    text-align: right;
    margin: 0 !important;
    position: relative;
    padding: 0;
    top: -35px;
    height: 30px;
    width: 100%;
  }
  .options.zero {
    height: 0;
  }
  .options span {
    border-radius: 50%;
    margin-right: 20px;

    height: 18px;
    padding: 10px;
    cursor: pointer;
    color:var(--playground-preview-toolbar-foreground-color, #444);
    
  }
  .options span > svg {
    --sl-icon-size: 18px !important;
    margin-top: 3px;
  }
  .options span.editable > svg {
    --sl-icon-size: 18px !important;
    color: var(--playground-code-attribute-color, #00c);
    margin-top: 3px;
  }
  .options span:hover {
    background-color: #9c9c9c;
  }
</style>
<script type="module">
// eslint-disable-next-line no-use-before-define
// meterlo local antes de prod
import playgroundElements from 'https://cdn.jsdelivr.net/npm/playground-elements@0.18.1/+esm'
</script>
<playground-project id={name}></playground-project>
<div class="example" >
  <playground-preview  location={name} project={name}></playground-preview>
  <div class:list={[ 'options not-content', { zero: hideCode }]}>
    <span title="Edit example" class:list={[ 'edit-'+name, { hide: hideCode }]} >
      <svg aria-hidden="true" class="astro-c6vsoqas" width="16" height="16" viewBox="0 0 24 24" fill="currentColor" style="--sl-icon-size: 1em;"><path d="M21 12a1 1 0 0 0-1 1v6a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h6a1 1 0 1 0 0-2H5a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-6a1 1 0 0 0-1-1Zm-15 .76V17a1 1 0 0 0 1 1h4.24a1 1 0 0 0 .71-.29l6.92-6.93L21.71 8a1 1 0 0 0 0-1.42l-4.24-4.29a1 1 0 0 0-1.42 0l-2.82 2.83-6.94 6.93a1 1 0 0 0-.29.71Zm10.76-8.35 2.83 2.83-1.42 1.42-2.83-2.83 1.42-1.42ZM8 13.17l5.93-5.93 2.83 2.83L10.83 16H8v-2.83Z"></path></svg>
    </span>
    <span title="Copy to clipboard"  class:list={[ 'copy-'+name, { hide: hideCode }]}>
      <svg aria-hidden="true" class="astro-c6vsoqas" width="16" height="16" viewBox="0 0 24 24" fill="currentColor" style="--sl-icon-size: 1em;"><path d="M9 10h1a1 1 0 1 0 0-2H9a1 1 0 0 0 0 2Zm0 2a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2H9Zm11-3.06a1.3 1.3 0 0 0-.06-.27v-.09c-.05-.1-.11-.2-.19-.28l-6-6a1.07 1.07 0 0 0-.28-.19h-.09a.88.88 0 0 0-.33-.11H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.94Zm-6-3.53L16.59 8H15a1 1 0 0 1-1-1V5.41ZM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h5v3a3 3 0 0 0 3 3h3v9Zm-3-3H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2Z"></path></svg>
    </span>
    <span title="Open example in another tab"  class={'open-'+name}> 
      <svg aria-hidden="true" class="astro-c6vsoqas" width="16" height="16" viewBox="0 0 24 24" fill="currentColor" style="--sl-icon-size: 1em;"><path d="M19.33 10.18a1 1 0 0 1-.77 0 1 1 0 0 1-.62-.93l.01-1.83-8.2 8.2a1 1 0 0 1-1.41-1.42l8.2-8.2H14.7a1 1 0 0 1 0-2h4.25a1 1 0 0 1 1 1v4.25a1 1 0 0 1-.62.93Z"></path><path d="M11 4a1 1 0 1 1 0 2H7a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-4a1 1 0 1 1 2 0v4a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h4Z"></path></svg>
    </span>
    
  </div>
 
  <div class:list={[ 'code', { hide: hideCode }]}>
    <playground-file-editor  
      id={'code-'+name}
      project={name}
      readonly
      class="playground-theme-material-palenight "></playground-file-editor>
  </div>
</div>
<script define:vars={{name, xurl}}>
const generateConfig = async (xurl) => {
  const result = await fetch(xurl)
  const text = await result.text()

  return { files: { 'index.html' : {content: text}}}
}


generateConfig(xurl).then((obj) => {
  var ff = document.querySelector('#'+name)
  ff['config'] = obj
})


 
  // edit button.
 const editElement =  document.querySelector('.edit-'+name)
 editElement.addEventListener('click', (e) => {
      edit(e.currentTarget.classList[0].split('-')[1],  editElement)
    });
 // copy button
 const copyElement =  document.querySelector('.copy-'+name)
 copyElement.addEventListener('click', (e) => {
      copy(e.currentTarget.classList[0].split('-')[1], copyElement)
    });
    // open tab button
 const openElement =  document.querySelector('.open-'+name)
 openElement.addEventListener('click', (e) => {
      open(xurl)
    });
  const edit = (id, editElement) => {
    let element = document.querySelector('#code-'+id)
    if (element.hasAttribute("readonly")) {
      element.removeAttribute("readonly")
      element.setAttribute("contenteditable", true)
      editElement.classList.add("editable");
    } else {
      element.setAttribute("readonly", 1)
      element.setAttribute("contenteditable", true)
      editElement.classList.remove("editable");
    }
  }
  const open = (url) => {
    window.open(url, "_blank");
  }
  const copy = (id, element) => {
    let r = document.createRange();
    r.selectNode(document.getElementById('code-'+id));
    window.getSelection().removeAllRanges();
    window.getSelection().addRange(r);
    document.execCommand('copy');
    window.getSelection().removeAllRanges();
    var path = element.querySelector('svg>path');
    
      path.setAttribute('d', "M18.71 7.20998C18.617 7.11625 18.5064 7.04186 18.3846 6.99109C18.2627 6.94032 18.132 6.91418 18 6.91418C17.868 6.91418 17.7373 6.94032 17.6154 6.99109C17.4936 7.04186 17.383 7.11625 17.29 7.20998L9.84001 14.67L6.71001 11.53C6.61349 11.4367 6.49955 11.3634 6.37469 11.3142C6.24984 11.265 6.11651 11.2409 5.98233 11.2432C5.84815 11.2455 5.71574 11.2743 5.59266 11.3278C5.46959 11.3812 5.35825 11.4585 5.26501 11.555C5.17177 11.6515 5.09846 11.7654 5.04925 11.8903C5.00005 12.0152 4.97592 12.1485 4.97824 12.2827C4.98056 12.4168 5.00929 12.5493 5.06278 12.6723C5.11628 12.7954 5.19349 12.9067 5.29001 13L9.13001 16.84C9.22297 16.9337 9.33358 17.0081 9.45543 17.0589C9.57729 17.1096 9.708 17.1358 9.84001 17.1358C9.97202 17.1358 10.1027 17.1096 10.2246 17.0589C10.3464 17.0081 10.457 16.9337 10.55 16.84L18.71 8.67998C18.8115 8.58634 18.8925 8.47269 18.9479 8.34619C19.0033 8.21969 19.0319 8.08308 19.0319 7.94498C19.0319 7.80688 19.0033 7.67028 18.9479 7.54378C18.8925 7.41728 18.8115 7.30363 18.71 7.20998Z")
    
    setTimeout(()=> {
      path.setAttribute('d', "M9 10h1a1 1 0 1 0 0-2H9a1 1 0 0 0 0 2Zm0 2a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2H9Zm11-3.06a1.3 1.3 0 0 0-.06-.27v-.09c-.05-.1-.11-.2-.19-.28l-6-6a1.07 1.07 0 0 0-.28-.19h-.09a.88.88 0 0 0-.33-.11H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.94Zm-6-3.53L16.59 8H15a1 1 0 0 1-1-1V5.41ZM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h5v3a3 3 0 0 0 3 3h3v9Zm-3-3H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2Z")
    }, 1500)
 
  }   
</script>
 